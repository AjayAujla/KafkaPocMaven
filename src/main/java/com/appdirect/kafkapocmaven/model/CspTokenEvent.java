/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.appdirect.kafkapocmaven.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CspTokenEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1592724904792691698L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CspTokenEvent\",\"namespace\":\"com.appdirect.kafkapocmaven.model\",\"fields\":[{\"name\":\"creation_date_time\",\"type\":\"string\"},{\"name\":\"expiration_date_time\",\"type\":\"string\"},{\"name\":\"days_remaining\",\"type\":\"int\"},{\"name\":\"authorizer\",\"type\":\"long\"},{\"name\":\"tenant_domain\",\"type\":\"string\"},{\"name\":\"event_type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"CspTokenEventType\",\"symbols\":[\"CREATED\",\"UPDATED\",\"EXPIRING\",\"EXPIRED\"]}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CspTokenEvent> ENCODER =
      new BinaryMessageEncoder<CspTokenEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CspTokenEvent> DECODER =
      new BinaryMessageDecoder<CspTokenEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CspTokenEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CspTokenEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CspTokenEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CspTokenEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CspTokenEvent from a ByteBuffer. */
  public static CspTokenEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence creation_date_time;
  @Deprecated public java.lang.CharSequence expiration_date_time;
  @Deprecated public int days_remaining;
  @Deprecated public long authorizer;
  @Deprecated public java.lang.CharSequence tenant_domain;
  @Deprecated public com.appdirect.kafkapocmaven.model.CspTokenEventType event_type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CspTokenEvent() {}

  /**
   * All-args constructor.
   * @param creation_date_time The new value for creation_date_time
   * @param expiration_date_time The new value for expiration_date_time
   * @param days_remaining The new value for days_remaining
   * @param authorizer The new value for authorizer
   * @param tenant_domain The new value for tenant_domain
   * @param event_type The new value for event_type
   */
  public CspTokenEvent(java.lang.CharSequence creation_date_time, java.lang.CharSequence expiration_date_time, java.lang.Integer days_remaining, java.lang.Long authorizer, java.lang.CharSequence tenant_domain, com.appdirect.kafkapocmaven.model.CspTokenEventType event_type) {
    this.creation_date_time = creation_date_time;
    this.expiration_date_time = expiration_date_time;
    this.days_remaining = days_remaining;
    this.authorizer = authorizer;
    this.tenant_domain = tenant_domain;
    this.event_type = event_type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return creation_date_time;
    case 1: return expiration_date_time;
    case 2: return days_remaining;
    case 3: return authorizer;
    case 4: return tenant_domain;
    case 5: return event_type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: creation_date_time = (java.lang.CharSequence)value$; break;
    case 1: expiration_date_time = (java.lang.CharSequence)value$; break;
    case 2: days_remaining = (java.lang.Integer)value$; break;
    case 3: authorizer = (java.lang.Long)value$; break;
    case 4: tenant_domain = (java.lang.CharSequence)value$; break;
    case 5: event_type = (com.appdirect.kafkapocmaven.model.CspTokenEventType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'creation_date_time' field.
   * @return The value of the 'creation_date_time' field.
   */
  public java.lang.CharSequence getCreationDateTime() {
    return creation_date_time;
  }

  /**
   * Sets the value of the 'creation_date_time' field.
   * @param value the value to set.
   */
  public void setCreationDateTime(java.lang.CharSequence value) {
    this.creation_date_time = value;
  }

  /**
   * Gets the value of the 'expiration_date_time' field.
   * @return The value of the 'expiration_date_time' field.
   */
  public java.lang.CharSequence getExpirationDateTime() {
    return expiration_date_time;
  }

  /**
   * Sets the value of the 'expiration_date_time' field.
   * @param value the value to set.
   */
  public void setExpirationDateTime(java.lang.CharSequence value) {
    this.expiration_date_time = value;
  }

  /**
   * Gets the value of the 'days_remaining' field.
   * @return The value of the 'days_remaining' field.
   */
  public java.lang.Integer getDaysRemaining() {
    return days_remaining;
  }

  /**
   * Sets the value of the 'days_remaining' field.
   * @param value the value to set.
   */
  public void setDaysRemaining(java.lang.Integer value) {
    this.days_remaining = value;
  }

  /**
   * Gets the value of the 'authorizer' field.
   * @return The value of the 'authorizer' field.
   */
  public java.lang.Long getAuthorizer() {
    return authorizer;
  }

  /**
   * Sets the value of the 'authorizer' field.
   * @param value the value to set.
   */
  public void setAuthorizer(java.lang.Long value) {
    this.authorizer = value;
  }

  /**
   * Gets the value of the 'tenant_domain' field.
   * @return The value of the 'tenant_domain' field.
   */
  public java.lang.CharSequence getTenantDomain() {
    return tenant_domain;
  }

  /**
   * Sets the value of the 'tenant_domain' field.
   * @param value the value to set.
   */
  public void setTenantDomain(java.lang.CharSequence value) {
    this.tenant_domain = value;
  }

  /**
   * Gets the value of the 'event_type' field.
   * @return The value of the 'event_type' field.
   */
  public com.appdirect.kafkapocmaven.model.CspTokenEventType getEventType() {
    return event_type;
  }

  /**
   * Sets the value of the 'event_type' field.
   * @param value the value to set.
   */
  public void setEventType(com.appdirect.kafkapocmaven.model.CspTokenEventType value) {
    this.event_type = value;
  }

  /**
   * Creates a new CspTokenEvent RecordBuilder.
   * @return A new CspTokenEvent RecordBuilder
   */
  public static com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder newBuilder() {
    return new com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder();
  }

  /**
   * Creates a new CspTokenEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CspTokenEvent RecordBuilder
   */
  public static com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder newBuilder(com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder other) {
    return new com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder(other);
  }

  /**
   * Creates a new CspTokenEvent RecordBuilder by copying an existing CspTokenEvent instance.
   * @param other The existing instance to copy.
   * @return A new CspTokenEvent RecordBuilder
   */
  public static com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder newBuilder(com.appdirect.kafkapocmaven.model.CspTokenEvent other) {
    return new com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder(other);
  }

  /**
   * RecordBuilder for CspTokenEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CspTokenEvent>
    implements org.apache.avro.data.RecordBuilder<CspTokenEvent> {

    private java.lang.CharSequence creation_date_time;
    private java.lang.CharSequence expiration_date_time;
    private int days_remaining;
    private long authorizer;
    private java.lang.CharSequence tenant_domain;
    private com.appdirect.kafkapocmaven.model.CspTokenEventType event_type;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.creation_date_time)) {
        this.creation_date_time = data().deepCopy(fields()[0].schema(), other.creation_date_time);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.expiration_date_time)) {
        this.expiration_date_time = data().deepCopy(fields()[1].schema(), other.expiration_date_time);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.days_remaining)) {
        this.days_remaining = data().deepCopy(fields()[2].schema(), other.days_remaining);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.authorizer)) {
        this.authorizer = data().deepCopy(fields()[3].schema(), other.authorizer);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.tenant_domain)) {
        this.tenant_domain = data().deepCopy(fields()[4].schema(), other.tenant_domain);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.event_type)) {
        this.event_type = data().deepCopy(fields()[5].schema(), other.event_type);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CspTokenEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.appdirect.kafkapocmaven.model.CspTokenEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.creation_date_time)) {
        this.creation_date_time = data().deepCopy(fields()[0].schema(), other.creation_date_time);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.expiration_date_time)) {
        this.expiration_date_time = data().deepCopy(fields()[1].schema(), other.expiration_date_time);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.days_remaining)) {
        this.days_remaining = data().deepCopy(fields()[2].schema(), other.days_remaining);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.authorizer)) {
        this.authorizer = data().deepCopy(fields()[3].schema(), other.authorizer);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.tenant_domain)) {
        this.tenant_domain = data().deepCopy(fields()[4].schema(), other.tenant_domain);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.event_type)) {
        this.event_type = data().deepCopy(fields()[5].schema(), other.event_type);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'creation_date_time' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreationDateTime() {
      return creation_date_time;
    }

    /**
      * Sets the value of the 'creation_date_time' field.
      * @param value The value of 'creation_date_time'.
      * @return This builder.
      */
    public com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder setCreationDateTime(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.creation_date_time = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'creation_date_time' field has been set.
      * @return True if the 'creation_date_time' field has been set, false otherwise.
      */
    public boolean hasCreationDateTime() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'creation_date_time' field.
      * @return This builder.
      */
    public com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder clearCreationDateTime() {
      creation_date_time = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'expiration_date_time' field.
      * @return The value.
      */
    public java.lang.CharSequence getExpirationDateTime() {
      return expiration_date_time;
    }

    /**
      * Sets the value of the 'expiration_date_time' field.
      * @param value The value of 'expiration_date_time'.
      * @return This builder.
      */
    public com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder setExpirationDateTime(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.expiration_date_time = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'expiration_date_time' field has been set.
      * @return True if the 'expiration_date_time' field has been set, false otherwise.
      */
    public boolean hasExpirationDateTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'expiration_date_time' field.
      * @return This builder.
      */
    public com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder clearExpirationDateTime() {
      expiration_date_time = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'days_remaining' field.
      * @return The value.
      */
    public java.lang.Integer getDaysRemaining() {
      return days_remaining;
    }

    /**
      * Sets the value of the 'days_remaining' field.
      * @param value The value of 'days_remaining'.
      * @return This builder.
      */
    public com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder setDaysRemaining(int value) {
      validate(fields()[2], value);
      this.days_remaining = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'days_remaining' field has been set.
      * @return True if the 'days_remaining' field has been set, false otherwise.
      */
    public boolean hasDaysRemaining() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'days_remaining' field.
      * @return This builder.
      */
    public com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder clearDaysRemaining() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'authorizer' field.
      * @return The value.
      */
    public java.lang.Long getAuthorizer() {
      return authorizer;
    }

    /**
      * Sets the value of the 'authorizer' field.
      * @param value The value of 'authorizer'.
      * @return This builder.
      */
    public com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder setAuthorizer(long value) {
      validate(fields()[3], value);
      this.authorizer = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'authorizer' field has been set.
      * @return True if the 'authorizer' field has been set, false otherwise.
      */
    public boolean hasAuthorizer() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'authorizer' field.
      * @return This builder.
      */
    public com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder clearAuthorizer() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'tenant_domain' field.
      * @return The value.
      */
    public java.lang.CharSequence getTenantDomain() {
      return tenant_domain;
    }

    /**
      * Sets the value of the 'tenant_domain' field.
      * @param value The value of 'tenant_domain'.
      * @return This builder.
      */
    public com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder setTenantDomain(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.tenant_domain = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'tenant_domain' field has been set.
      * @return True if the 'tenant_domain' field has been set, false otherwise.
      */
    public boolean hasTenantDomain() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'tenant_domain' field.
      * @return This builder.
      */
    public com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder clearTenantDomain() {
      tenant_domain = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'event_type' field.
      * @return The value.
      */
    public com.appdirect.kafkapocmaven.model.CspTokenEventType getEventType() {
      return event_type;
    }

    /**
      * Sets the value of the 'event_type' field.
      * @param value The value of 'event_type'.
      * @return This builder.
      */
    public com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder setEventType(com.appdirect.kafkapocmaven.model.CspTokenEventType value) {
      validate(fields()[5], value);
      this.event_type = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'event_type' field has been set.
      * @return True if the 'event_type' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'event_type' field.
      * @return This builder.
      */
    public com.appdirect.kafkapocmaven.model.CspTokenEvent.Builder clearEventType() {
      event_type = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CspTokenEvent build() {
      try {
        CspTokenEvent record = new CspTokenEvent();
        record.creation_date_time = fieldSetFlags()[0] ? this.creation_date_time : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.expiration_date_time = fieldSetFlags()[1] ? this.expiration_date_time : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.days_remaining = fieldSetFlags()[2] ? this.days_remaining : (java.lang.Integer) defaultValue(fields()[2]);
        record.authorizer = fieldSetFlags()[3] ? this.authorizer : (java.lang.Long) defaultValue(fields()[3]);
        record.tenant_domain = fieldSetFlags()[4] ? this.tenant_domain : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.event_type = fieldSetFlags()[5] ? this.event_type : (com.appdirect.kafkapocmaven.model.CspTokenEventType) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CspTokenEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<CspTokenEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CspTokenEvent>
    READER$ = (org.apache.avro.io.DatumReader<CspTokenEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
